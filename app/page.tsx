'use client'

import { useState } from 'react'

export default function HomePage() {
  const [messages, setMessages] = useState([
    { id: 1, text: "AI: –ü—Ä–∏–≤–µ—Ç! –Ø –≤–∞—à AI-–∫–æ—Ñ–∞—É–Ω–¥–µ—Ä. –ö–∞–∫—É—é –∏–¥–µ—é —Ö–æ—Ç–∏—Ç–µ —Ä–∞–∑–≤–∏—Ç—å?", isAI: true }
  ])
  const [inputText, setInputText] = useState('')

  const handleSendMessage = () => {
    if (inputText.trim()) {
      // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const userMessage = { id: Date.now(), text: `–í—ã: ${inputText}`, isAI: false }
      setMessages(prev => [...prev, userMessage])
      
      // –ò–º–∏—Ç–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç AI
      setTimeout(() => {
        const aiResponse = { 
          id: Date.now() + 1, 
          text: `AI: –û—Ç–ª–∏—á–Ω–∞—è –∏–¥–µ—è! –î–∞–≤–∞–π—Ç–µ —Ä–∞–∑–±–µ—Ä–µ–º –µ—ë –ø–æ–¥—Ä–æ–±–Ω–µ–µ. –ß—Ç–æ –∏–º–µ–Ω–Ω–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å?`, 
          isAI: true 
        }
        setMessages(prev => [...prev, aiResponse])
      }, 1000)
      
      setInputText('')
    }
  }

  const handleKeyPress = (e: React.KeyboardEvent) => {
    if (e.key === 'Enter') {
      handleSendMessage()
    }
  }

  return (
    <div className="h-screen flex flex-col">
      <div className="bg-blue-600 text-white p-4">
        <h1 className="text-xl font-bold">AI Co-founder Platform</h1>
        <p className="text-sm opacity-90">–ü–æ–ª–Ω–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª–µ–π</p>
      </div>
      <div className="flex-1 flex">
        {/* Chat Panel - 1/3 —ç–∫—Ä–∞–Ω–∞ */}
        <div className="w-1/3 bg-white border-r flex flex-col">
          <div className="p-4 border-b">
            <h2 className="text-lg font-semibold">AI –ß–∞—Ç</h2>
          </div>
          <div className="flex-1 p-4 overflow-y-auto">
            <div className="space-y-4">
              {messages.map((message) => (
                <div key={message.id} className={`p-3 rounded ${message.isAI ? 'bg-gray-100' : 'bg-blue-100'}`}>
                  <p className="text-sm">{message.text}</p>
                </div>
              ))}
            </div>
          </div>
          <div className="p-4 border-t">
            <div className="flex space-x-2">
              <input 
                type="text" 
                value={inputText}
                onChange={(e) => setInputText(e.target.value)}
                onKeyPress={handleKeyPress}
                placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..."
                className="flex-1 border border-gray-300 rounded px-3 py-2 focus:outline-none focus:border-blue-500"
              />
              <button 
                onClick={handleSendMessage}
                className="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 transition-colors"
              >
                –û—Ç–ø—Ä–∞–≤–∏—Ç—å
              </button>
            </div>
          </div>
        </div>

        {/* Canvas Panel - 2/3 —ç–∫—Ä–∞–Ω–∞ */}
        <div className="w-2/3 bg-white p-4">
          <h2 className="text-lg font-semibold mb-4">Canvas –î–æ—Å–∫–∞</h2>
          <div className="border-2 border-dashed border-gray-300 h-full rounded flex items-center justify-center">
            <div className="text-center text-gray-500">
              <p className="text-lg mb-2">üé® –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –¥–æ—Å–∫–∞</p>
              <p className="text-sm">–ó–¥–µ—Å—å –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤–∞—à–∏ –∏–¥–µ–∏ –∏ –ø—Ä–æ–µ–∫—Ç—ã</p>
              <p className="text-xs mt-2 text-gray-400">–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}
