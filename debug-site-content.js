const https = require('https');

console.log('üîç Debugging Site Content');
console.log('=========================');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Å–∞–π—Ç–∞
function fetchWebsite(url) {
  return new Promise((resolve, reject) => {
    https.get(url, (res) => {
      let data = '';
      
      res.on('data', (chunk) => {
        data += chunk;
      });
      
      res.on('end', () => {
        resolve({
          statusCode: res.statusCode,
          headers: res.headers,
          body: data,
          contentLength: data.length
        });
      });
    }).on('error', (err) => {
      reject(err);
    });
  });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
function analyzeContent(content) {
  const analysis = {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é —Å–∞–π—Ç–∞
    hasBeginButton: content.includes('Begin'),
    hasAuthForm: content.includes('AuthForm') || content.includes('–í—Ö–æ–¥') || content.includes('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è'),
    hasCanvasBoard: content.includes('CanvasBoard') || content.includes('AI Canvas'),
    isStaticVersion: content.includes('Ideas.') && content.includes('Simplified.'),
    isDynamicVersion: content.includes('useState') || content.includes('useEffect'),
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—à–∏–±–∫–∏
    hasErrors: content.includes('Error') || content.includes('error') || content.includes('404'),
    hasDatabaseErrors: content.includes('database') && content.includes('error'),
    hasAuthErrors: content.includes('auth') && content.includes('error'),
    hasLimitErrors: content.includes('limit') || content.includes('quota') || content.includes('exceeded'),
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ
    cacheControl: content.includes('cache-control') ? 'Found' : 'Not found',
    lastModified: content.includes('last-modified') ? 'Found' : 'Not found',
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    contentLength: content.length,
    isMinimalContent: content.length < 1000
  };
  
  return analysis;
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ª–∞–¥–∫–∏
async function debugSiteContent() {
  try {
    console.log('üì° Fetching website content...');
    const result = await fetchWebsite('https://ai-cofounder-platform-2411.vercel.app/');
    
    console.log(`‚úÖ Status Code: ${result.statusCode}`);
    console.log(`üìè Content Length: ${result.contentLength} bytes`);
    console.log(`üîÑ Cache Control: ${result.headers['cache-control'] || 'Not set'}`);
    console.log(`üìÖ Last Modified: ${result.headers['last-modified'] || 'Not set'}`);
    console.log(`üè∑Ô∏è  ETag: ${result.headers['etag'] || 'Not set'}`);
    
    console.log('\nüîç Analyzing content...');
    const analysis = analyzeContent(result.body);
    
    console.log('\nüìä Content Analysis:');
    console.log('===================');
    console.log(`‚ùå Has Begin Button: ${analysis.hasBeginButton ? 'YES' : 'NO'}`);
    console.log(`‚úÖ Has Auth Form: ${analysis.hasAuthForm ? 'YES' : 'NO'}`);
    console.log(`‚úÖ Has Canvas Board: ${analysis.hasCanvasBoard ? 'YES' : 'NO'}`);
    console.log(`üìÑ Is Static Version: ${analysis.isStaticVersion ? 'YES' : 'NO'}`);
    console.log(`‚ö° Is Dynamic Version: ${analysis.isDynamicVersion ? 'YES' : 'NO'}`);
    
    console.log('\nüö® Error Analysis:');
    console.log('==================');
    console.log(`‚ùå Has General Errors: ${analysis.hasErrors ? 'YES' : 'NO'}`);
    console.log(`‚ùå Has Database Errors: ${analysis.hasDatabaseErrors ? 'YES' : 'NO'}`);
    console.log(`‚ùå Has Auth Errors: ${analysis.hasAuthErrors ? 'YES' : 'NO'}`);
    console.log(`‚ùå Has Limit Errors: ${analysis.hasLimitErrors ? 'YES' : 'NO'}`);
    
    console.log('\nüíæ Caching Analysis:');
    console.log('====================');
    console.log(`üîÑ Cache Control: ${analysis.cacheControl}`);
    console.log(`üìÖ Last Modified: ${analysis.lastModified}`);
    console.log(`üìè Content Length: ${analysis.contentLength} bytes`);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 500 —Å–∏–º–≤–æ–ª–æ–≤ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
    console.log('\nüìÑ First 500 characters of content:');
    console.log('===================================');
    console.log(result.body.substring(0, 500));
    console.log('...');
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 500 —Å–∏–º–≤–æ–ª–æ–≤ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
    console.log('\nüìÑ Last 500 characters of content:');
    console.log('==================================');
    console.log('...');
    console.log(result.body.substring(result.body.length - 500));
    
    console.log('\nüéØ Diagnosis:');
    console.log('=============');
    
    if (analysis.hasBeginButton && analysis.isStaticVersion) {
      console.log('üö® DEPLOYMENT ISSUE: Still showing old static version!');
      console.log('   - Begin button is present');
      console.log('   - No authentication form');
      console.log('   - No dynamic React components');
      console.log('\nüí° Possible causes:');
      console.log('   1. Vercel cache not updated');
      console.log('   2. Build failed silently');
      console.log('   3. Wrong deployment branch');
      console.log('   4. Static files being served instead of Next.js app');
    } else if (analysis.hasAuthForm && analysis.hasCanvasBoard) {
      console.log('‚úÖ SUCCESS: Site shows new dynamic version!');
    } else {
      console.log('‚ö†Ô∏è  MIXED: Site shows partial updates');
    }
    
  } catch (error) {
    console.error('‚ùå Debug failed:', error.message);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Ç–ª–∞–¥–∫—É
debugSiteContent();
